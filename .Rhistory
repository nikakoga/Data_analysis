?read.table
dane<-read.table(file="https://ekursy.put.poznan.pl/pluginfile.php/2468751/mod_resource/content/1/RNAcounts_basic.txt",header = TRUE, sep=" ")
dane<-read.table(file="https://ekursy.put.poznan.pl/pluginfile.php/2468751/mod_resource/content/1/RNAcounts_basic.txt",sep=" ")
dane<-read.table("https://ekursy.put.poznan.pl/pluginfile.php/2468751/mod_resource/content/1/RNAcounts_basic.txt",sep=" ")
dane<-read.table("C:\Users\weron\Documents\Studia\PP\4 semestr\Techniki Wysokoprzepustowe\Geny_do_R.txt",sep=" ")
dane<-read.table("C:/Users/weron/Documents/Studia/PP/4 semestr/Techniki Wysokoprzepustowe/Geny_do_R.txt",sep=" ")
dane
ktore_proby<-t(matrix(1:14,nrow=2))
ktore_proby
colnames(dane)
nazwy_kolumn=c(colnames(dane))
nazwy_kolumn
tylko_te_co_chcemy<-nazwy_kolumn[-c(2,4,6,8,10)]
tylko_te_co_chcemy
rownames(ktore_proby)=tylko_te_co_chcemy
ktore_proby
nazwy_kolumn=c(colnames(dane))
nazwy_kolumn
tylko_te_co_chcemy<-nazwy_kolumn[-c(2,4,6,8,10,12)]
tylko_te_co_chcemy
rownames(ktore_proby)=tylko_te_co_chcemy
tylko_te_co_chcemy<-nazwy_kolumn[-c(2,4,6,8,10,12,14)]
tylko_te_co_chcemy
rownames(ktore_proby)=tylko_te_co_chcemy
ktore_proby
ktore_parowania=as.matrix(data.frame(first=rep(1,6),sec=c(2:7)))
ktore_parowania
cos<-c(ktore_proby[ktore_parowania[1,],])
cos
cos<-dane[,c(ktore_proby[ktore_parowania[1,],])]
cos
cos<-dane[,c(ktore_proby[ktore_parowania[1,]])]
cos
cos<-dane[,c(ktore_proby[ktore_parowania[1,],])]
cos<-dane[,c(ktore_proby[ktore_parowania[1,]])]
cos
cos<-dane[,c(ktore_proby[ktore_parowania[1,],])]
cos
View(cos)
View(cos)
tabela_z_porownaniem<-dane[,c(ktore_proby[ktore_parowania[1,],])]
View(tabela_z_porownaniem)
View(cos)
dds <- DESeqDataSetFromMatrix(countData = cc,colData =
colData,design = ~ condition)
library("DESeq2")
dds <- DESeqDataSetFromMatrix(countData = cc,colData =
colData,design = ~ condition)
dds <- DESeqDataSetFromMatrix(countData = tabela_z_porownaniem,colData =
colData,design = ~ condition)
dds <- DESeqDataSetFromMatrix(countData = cc,colData =
colData,design = ~ condition)
dds <- DESeqDataSetFromMatrix(countData = tabela_z_porownaniem,colData =
colData,design = ~ condition)
colData<-data.frame(condition=factor(c("A", "B", "A", "B")))
dds <- DESeqDataSetFromMatrix(countData = tabela_z_porownaniem,colData =
colData,design = ~ condition)
adj.p-value.dds <- DESeq(dds)
adj_p_value_dds <- DESeq(dds)
results(dds)
dds <- DESeq(dds)
results(dds)
duoa<-results(dds)
#ZAD 3
Dane<-read.csv2("http://www.cs.put.poznan.pl/kgutowska/RPiS/dane/SelectedPolandData.csv")
is_numeric<-function(dane){
for (i in 1:ncol(dane)){
if(is.numeric(dane[[i]]))
{
kolumna<-colnames(dane)[i]
min_wartosc<-min(dane[[i]],na.rm=TRUE)
max_wartosc<-max(dane[[i]],na.rm=TRUE)
srednia<-mean(dane[[i]],na.rm=TRUE)
cat(kolumna,"Min wartosc = ", min_wartosc, "Max_wartosc = ",max_wartosc, "Srednia_wartosc = ",srednia)
}
}
}
is_numeric(dane)
parzyste_indeksy<-dane[seq(2,nrow(dane),2),]
print(parzyste_indeksy)
dane_przypadki<-with(dane,dane[total_cases<100&total_deaths ==0,])
#ZAD 3
Dane<-read.csv2("http://www.cs.put.poznan.pl/kgutowska/RPiS/dane/SelectedPolandData.csv")
is_numeric<-function(dane){
for (i in 1:ncol(dane)){
if(is.numeric(dane[[i]]))
{
kolumna<-colnames(dane)[i]
min_wartosc<-min(dane[[i]],na.rm=TRUE)
max_wartosc<-max(dane[[i]],na.rm=TRUE)
srednia<-mean(dane[[i]],na.rm=TRUE)
cat(kolumna,"Min wartosc = ", min_wartosc, "Max_wartosc = ",max_wartosc, "Srednia_wartosc = ",srednia)
}
}
}
is_numeric(dane)
#ZAD 3
dane<-read.csv2("http://www.cs.put.poznan.pl/kgutowska/RPiS/dane/SelectedPolandData.csv")
is_numeric<-function(dane){
for (i in 1:ncol(dane)){
if(is.numeric(dane[[i]]))
{
kolumna<-colnames(dane)[i]
min_wartosc<-min(dane[[i]],na.rm=TRUE)
max_wartosc<-max(dane[[i]],na.rm=TRUE)
srednia<-mean(dane[[i]],na.rm=TRUE)
cat(kolumna,"Min wartosc = ", min_wartosc, "Max_wartosc = ",max_wartosc, "Srednia_wartosc = ",srednia)
}
}
}
is_numeric(dane)
parzyste_indeksy<-dane[seq(2,nrow(dane),2),]
print(parzyste_indeksy)
dane_sel<-with(dane,dane[total_cases<100&total_deaths ==0,])
dane_sel
#ZAD 3
dane<-read.csv2("http://www.cs.put.poznan.pl/kgutowska/RPiS/dane/SelectedPolandData.csv")
dane
ile_kolumn <-ncol(dane)
ile_kolumn
dane$iso_code.location.date.total_cases.new_cases.total_deaths.new_deaths
#ZAD 3
dane<-read.csv2("http://www.cs.put.poznan.pl/kgutowska/RPiS/dane/SelectedPolandData.csv")
dane
is_numeric<-function(dane){
for (i in 1:ncol(dane)){
if(is.numeric(dane[[i]]))
{
kolumna<-colnames(dane)[i]
min_wartosc<-min(dane[[i]],na.rm=TRUE)
max_wartosc<-max(dane[[i]],na.rm=TRUE)
srednia<-mean(dane[[i]],na.rm=TRUE)
cat(kolumna,"Min wartosc = ", min_wartosc, "Max_wartosc = ",max_wartosc, "Srednia_wartosc = ",srednia,"total_cases = ")
}
}
}
is_numeric(dane)
parzyste_indeksy<-dane[seq(2,nrow(dane),2),]
print(parzyste_indeksy)
dane_sel<-with(dane,dane[total_cases<100&total_deaths ==0,])
#ZAD 3
dane<-read.csv2("http://www.cs.put.poznan.pl/kgutowska/RPiS/dane/SelectedPolandData.csv")
dane
is_numeric<-function(dane){
for (i in 1:ncol(dane)){
if(is.numeric(dane[[i]]))
{
kolumna<-colnames(dane)[i]
min_wartosc<-min(dane[[i]],na.rm=TRUE)
max_wartosc<-max(dane[[i]],na.rm=TRUE)
srednia<-mean(dane[[i]],na.rm=TRUE)
cat(kolumna,"Min wartosc = ", min_wartosc, "Max_wartosc = ",max_wartosc, "Srednia_wartosc = ",srednia,"total_cases = ")
}
}
}
is_numeric(dane)
parzyste_indeksy<-dane[seq(2,nrow(dane),2),]
print(parzyste_indeksy)
dane_sel<-with(dane,dane[total_cases<100,])
#ZAD 3
dane<-read.csv2("http://www.cs.put.poznan.pl/kgutowska/RPiS/dane/SelectedPolandData.csv")
attach(dane)
is_numeric<-function(dane){
for (i in 1:ncol(dane)){
if(is.numeric(dane[[i]]))
{
kolumna<-colnames(dane)[i]
min_wartosc<-min(dane[[i]],na.rm=TRUE)
max_wartosc<-max(dane[[i]],na.rm=TRUE)
srednia<-mean(dane[[i]],na.rm=TRUE)
cat(kolumna,"Min wartosc = ", min_wartosc, "Max_wartosc = ",max_wartosc, "Srednia_wartosc = ",srednia,"total_cases = ")
}
}
}
is_numeric(dane)
parzyste_indeksy<-dane[seq(2,nrow(dane),2),]
print(parzyste_indeksy)
dane_sel<-with(dane,dane[total_cases<100,])
dane_sel<-witch(dane_sel,dane_sel[total_deaths==0,])
#ZAD 3
dane<-read.csv2("http://www.cs.put.poznan.pl/kgutowska/RPiS/dane/SelectedPolandData.csv")
attach(dane)
is_numeric<-function(dane){
for (i in 1:ncol(dane)){
if(is.numeric(dane[[i]]))
{
kolumna<-colnames(dane)[i]
min_wartosc<-min(dane[[i]],na.rm=TRUE)
max_wartosc<-max(dane[[i]],na.rm=TRUE)
srednia<-mean(dane[[i]],na.rm=TRUE)
cat(kolumna,"Min wartosc = ", min_wartosc, "Max_wartosc = ",max_wartosc, "Srednia_wartosc = ",srednia,"total_cases = ")
}
}
}
#ZAD 3
dane<-read.csv2("http://www.cs.put.poznan.pl/kgutowska/RPiS/dane/SelectedPolandData.csv")
dane
is_numeric<-function(dane){
for (i in 1:ncol(dane)){
if(is.numeric(dane[[i]]))
{
kolumna<-colnames(dane)[i]
min_wartosc<-min(dane[[i]],na.rm=TRUE)
max_wartosc<-max(dane[[i]],na.rm=TRUE)
srednia<-mean(dane[[i]],na.rm=TRUE)
cat(kolumna,"Min wartosc = ", min_wartosc, "Max_wartosc = ",max_wartosc, "Srednia_wartosc = ",srednia,"total_cases = ")
}
}
}
is_numeric(dane)
parzyste_indeksy<-dane[seq(2,nrow(dane),2),]
print(parzyste_indeksy)
dane_sel<-with(dane,dane[total_cases<100&total_deaths ==0,])
dane
#ZAD 3
dane<-read.csv("http://www.cs.put.poznan.pl/kgutowska/RPiS/dane/SelectedPolandData.csv")
dane
is_numeric<-function(dane){
for (i in 1:ncol(dane)){
if(is.numeric(dane[[i]]))
{
kolumna<-colnames(dane)[i]
min_wartosc<-min(dane[[i]],na.rm=TRUE)
max_wartosc<-max(dane[[i]],na.rm=TRUE)
srednia<-mean(dane[[i]],na.rm=TRUE)
cat(kolumna,"Min wartosc = ", min_wartosc, "Max_wartosc = ",max_wartosc, "Srednia_wartosc = ",srednia,"total_cases = ")
}
}
}
is_numeric(dane)
parzyste_indeksy<-dane[seq(2,nrow(dane),2),]
print(parzyste_indeksy)
dane_sel<-with(dane,dane[total_cases<100&total_deaths ==0,])
dane_sel
nrow(dane_sel)
barplot(dane_sel$total_cases,
main="Zależność pomiędzy ilością chorych od czasu",
xlab="Data",
ylab="Całkowita liczba przypadków",
names.arg=as.Date(dane_sel$date),
las=2,
cex.names=0.8,
col="pink",
border = "lightblue"
)
barplot(dane_sel$total_cases,
main="Zależność pomiędzy ilością chorych od czasu",
xlab="Data",
ylab="Całkowita liczba przypadków",
names.arg=as.Date(dane_sel$date),
las=2,
cex.names=0.8,
col="pink",
border = "black"
)
my_text<-"Hello"
cat(my_text, sep="  \n", file = "my_text.Rmd")
render("my_text.Rmd", pdf_document())
require(rmarkdown)
my_text<-"Hello"
cat(my_text, sep="  \n", file = "my_text.Rmd")
render("my_text.Rmd", pdf_document())
file.remove("my_text.Rmd") #cleanup
setwd("C:/Users/weron/Documents/Studia/PP/4 semestr/SAD/Projekt")
library("Hmisc")
library("rmarkdown")
require(rmarkdown)
my_text<-"Hello"
cat(my_text, sep="  \n", file = "my_text.Rmd")
render("my_text.Rmd", pdf_document())
file.remove("my_text.Rmd") #cleanup
install.packages("knitr")
install.packages("knitr")
require(knitr)
my_text <- "Hello"
cat(my_text, sep="  \n", file = "my_text.Rmd")
knit2pdf("my_text.Rmd")
file.remove("my_text.Rmd")
require(knitr)
my_text <- "Hello"
cat(my_text, sep="  \n", file = "my_text.Rmd")
knit2pdf("my_text.Rmd")
file.remove("my_text.Rmd")
require(knitr)
my_text <- "Hello"
knit(text = my_text, output = "my_text.pdf")
require(knitr)
my_text <- "Hello pls start working"
knit(text = my_text, output = "my_text.pdf")
require(knitr)
my_text <- "Hello pls start working"
knit(text = my_text, output = "my_text.pdf")
require(knitr)
source("~/Studia/PP/4 semestr/SAD/Projekt/Data_analysis.R")
require(knitr)
my_text <- "Hello pls start working"
knit(text = my_text, output = "my_text.pdf")
require(knitr)
my_text <- "Hello pls start working"
knit(text = my_text, output = "my_text.pdf")
source("~/Studia/PP/4_semestr/SAD/Projekt/Data_analysis.R")
require(knitr)
my_text <- "Hello pls start working"
knit(text = my_text, output = "my_text.pdf")
require(knitr)
my_text <- "Hello pls start working"
knit(text = my_text, output = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.pdf")
library(pdftools)
install.packages("pdftools")
library(pdftools)
my_pdf<-"C:/Users/weron/Documents/Studia/PP/4_semestr/SAD/Projekt/TEST.pdf"
my_pdf<-"C:/Users/weron/Documents/Studia/PP/4_semestr/SAD/Projekt/TEST.pdf"
my_picture<-"C:/Users/weron/Documents/Studia/PP/4_semestr/SAD/Projekt/OBRAZ.jpg"
# konwertujemy plik PDF na obiekt R
pdf <- pdf_convert(my_pdf)
# wstawiamy obraz
pdf <- pdf_insert_image(pdf, "OBRAZ.jpg", page = n_pages(pdf)+1)
library(pdftools)
my_pdf<-"C:/Users/weron/Documents/Studia/PP/4_semestr/SAD/Projekt/TEST.pdf"
my_picture<-"C:/Users/weron/Documents/Studia/PP/4_semestr/SAD/Projekt/OBRAZ.jpg"
# konwertujemy plik PDF na obiekt R
pdf <- pdf_convert(my_pdf)
# wstawiamy obraz
pdf <- pdf_insert_image(pdf, "OBRAZ.jpg", page = n_pages(pdf)+1)
source("~/Studia/PP/4_semestr/SAD/Projekt/Data_analysis.R")
data_with_NA<-read.csv2("Dane.csv",header=TRUE)
data<-Remove_NA(data_with_NA)
Descriptive_statistics(data)
source("~/Studia/PP/4_semestr/SAD/Projekt/Data_analysis.R")
data_with_NA<-read.csv2("Dane.csv",header=TRUE)
data<-Remove_NA(data_with_NA)
Descriptive_statistics(data)
require(knitr)
my_text <- "Hello pls start working"
knit(text = my_text, output = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.pdf")
dev.off()
source("~/Studia/PP/4_semestr/SAD/Projekt/Data_analysis.R")
data_with_NA<-read.csv2("Dane.csv",header=TRUE)
data<-Remove_NA(data_with_NA)
Descriptive_statistics(data)
dev.off()
Outliers_detection<-function(df)
{
write("\n\nOUTLIERS\n","raport.txt",append=TRUE)
for(col in names(df))
{
#TESTY
pdf(file= "TEST.pdf" )
if(is.numeric(df[[col]]))
{
boxplot(df[[col]],
ylab = col)
#outliners<-append(outliners,(paste(col,boxplot.stats(df[[col]])$out,"\n")))
outliers<-boxplot.stats(df[[col]])$out
if(length(outliers)>0)
{
capture.output(cat(col,outliers,"\n"), file = "raport.txt",append=TRUE)
}
else
{
capture.output(cat(col,"no outliners","\n"), file = "raport.txt",append=TRUE)
}
}
}
dev.off()
}
data_with_NA<-read.csv2("Dane.csv",header=TRUE)
data<-Remove_NA(data_with_NA)
Descriptive_statistics(data)
source("~/Studia/PP/4_semestr/SAD/Projekt/Data_analysis.R")
source("~/Studia/PP/4_semestr/SAD/Projekt/Data_analysis.R")
setwd("C:/Users/weron/Documents/Studia/PP/4_semestr/SAD/Projekt")
library("Hmisc")
Replace_blank_with_NA<-function(x)
{
x<-replace(x,x=='',NA)
return(x)
}
Remove_NA <- function(df){
change_report <- c()
df<-Replace_blank_with_NA(df)
for (col in names(df)) {
#If NA in numeric column than replace with a median
if(is.numeric(df[[col]]) & any(is.na(df[[col]]))) {
NA_rows <- which(is.na(df[[col]]))  # get rows with missing values
df[[col]][is.na(df[[col]])] <- median(df[[col]], na.rm = TRUE)
change_report <- c(change_report, paste("Missing data in column", col, "in rows:", paste(NA_rows, collapse = ", "),"replacing with a median",median(df[[col]])))
}
}
#Now every NA in numeric columns are gone
#I delete every row with NA in non numeric column
TRUE_FALSE_vector<-complete.cases(df) #returns FALSE for rows with NA
Rows_to_delete<-which(TRUE_FALSE_vector==FALSE)
ready<-df[complete.cases(df),]
if (length(Rows_to_delete) > 0) {
deleted <- paste("Lack of data in non-numeric column I removed rows index:", paste(Rows_to_delete, collapse = ", "))
change_report<-append(change_report,deleted)
}
if(length(change_report) > 0) {
writeLines(change_report, "raport.txt")
}
return(ready)
}
count_groups <- function(column) {
unique_elements <- unique(column)
num_unique <- length(unique_elements)
counts <- table(column)
df <- data.frame(ID = names(counts), count = as.numeric(counts))
df
write("\nGROPUS AND THEIR SIZE\n","raport.txt",append=TRUE)
write.table(df,"raport.txt",append=TRUE, col.names = FALSE,row.names=FALSE)
}
Outliers_detection<-function(df)
{
write("\n\nOUTLIERS\n","raport.txt",append=TRUE)
for(col in names(df))
{
if(is.numeric(df[[col]]))
{
#TESTY
pdf(file= "TEST.pdf" )
boxplot(df[[col]],
ylab = col)
dev.off()
#outliners<-append(outliners,(paste(col,boxplot.stats(df[[col]])$out,"\n")))
outliers<-boxplot.stats(df[[col]])$out
if(length(outliers)>0)
{
capture.output(cat(col,outliers,"\n"), file = "raport.txt",append=TRUE)
}
else
{
capture.output(cat(col,"no outliners","\n"), file = "raport.txt",append=TRUE)
}
}
}
}
Descriptive_statistics<-function(df)
{
Outliers_detection(df)
count_groups(df[1])
write("\n\nCHARACTERISTICS","raport.txt",append=TRUE)
splitted_groups<-split(df,df[1])
groupnames<-names(splitted_groups)
colnames<-names(df[,-1])
for(col in colnames)
{
for(group in groupnames)
{
if(is.numeric(splitted_groups[[group]][[col]]))
{
write(paste('\n\n', group, '\n', col), "raport.txt", append = TRUE)
s <- summary(splitted_groups[[group]][[col]])
capture.output(s, file = "raport.txt",append=TRUE)
}
}
}
}
data_with_NA<-read.csv2("Dane.csv",header=TRUE)
data<-Remove_NA(data_with_NA)
Descriptive_statistics(data)
#TESTY
pdf(file= "TEST.pdf" )
Outliers_detection<-function(df)
{
write("\n\nOUTLIERS\n","raport.txt",append=TRUE)
for(col in names(df))
{
if(is.numeric(df[[col]]))
{
#TESTY
pdf(file= "TEST.pdf" )
boxplot(df[[col]],
ylab = col)
dev.off()
#outliners<-append(outliners,(paste(col,boxplot.stats(df[[col]])$out,"\n")))
outliers<-boxplot.stats(df[[col]])$out
if(length(outliers)>0)
{
capture.output(cat(col,outliers,"\n"), file = "raport.txt",append=TRUE)
}
else
{
capture.output(cat(col,"no outliners","\n"), file = "raport.txt",append=TRUE)
}
}
}
}
Descriptive_statistics<-function(df)
{
Outliers_detection(df)
count_groups(df[1])
write("\n\nCHARACTERISTICS","raport.txt",append=TRUE)
splitted_groups<-split(df,df[1])
groupnames<-names(splitted_groups)
colnames<-names(df[,-1])
for(col in colnames)
{
for(group in groupnames)
{
if(is.numeric(splitted_groups[[group]][[col]]))
{
write(paste('\n\n', group, '\n', col), "raport.txt", append = TRUE)
s <- summary(splitted_groups[[group]][[col]])
capture.output(s, file = "raport.txt",append=TRUE)
}
}
}
}
data_with_NA<-read.csv2("Dane.csv",header=TRUE)
data<-Remove_NA(data_with_NA)
Descriptive_statistics(data)
